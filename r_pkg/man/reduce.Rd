% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exported.R
\name{reduce}
\alias{reduce}
\title{Successively combine an R function across SciDB streaming data frame chunks}
\usage{
reduce(f, init, accumulate = FALSE, final = I, convertFactor = as.integer,
  stringsAsFactors = FALSE)
}
\arguments{
\item{f}{a binary function that takes two data frames as input argumenst and
produces a single output data frame.  The output data frame column types must
match the SciDB stream operator 'types' argument.}

\item{init}{optional initial data frame value to kick off the aggregation, must have the same form as the output of f.}

\item{accumulate}{a logical indicating whether the successive reduce
combinations should be accumulated.  By default, only the
final combination is used.}

\item{final}{optional function applied to final result before returning. If supplied, final must be a function of a
single data frame that returns a data frame compatible with the expected types.}

\item{convertFactor}{a function for conversion of R factor values into a supported type: one of double, integer, or character.}

\item{stringsAsFactors}{convert input strings to data frame factor values (\code{TRUE)} or not.}
}
\description{
This function is similar to the \code{Reduce} function, but applied to data frame chunks supplied
by SciDB. The SciDB streaming API works with R functions that take a data frame input value
and produce a data frame output value. The output data frame column types must match the
types declared in the SciDB stream operator.
}
\note{
Factor and logical values are converted by default into integer values. Set
\code{convertFactor=as.character} to convert factor values to character strings instead.
The \code{final} function does not apply to cumulative results when \code{accumulate=TRUE}, but only to the last returned
result.

Beware that data frame chunks are aggregated on a per-SciDB instance basis, and not
globally across all the input data.
}
\examples{
\dontrun{
}
}
\seealso{
\code{\link{schema}} \code{\link{map}}
}

